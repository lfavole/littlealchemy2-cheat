stages:
  - build-and-test
  - deploy

.base:
  stage: build-and-test
  cache:
    - key:
        files:
          - Cargo.toml
          - Cargo.lock
      paths:
        - ~/.cargo/bin/
        - ~/.cargo/registry/index/
        - ~/.cargo/registry/cache/
        - ~/.cargo/git/db/
        - target/
  parallel:
    matrix:
      - RUST_VERSION:
          - stable
          - beta
          - nightly
  image: rust:latest
  script:
    - rustup update $RUST_VERSION
    - rustup default $RUST_VERSION
    - cargo build --verbose
    - cargo test --verbose

run-tests-windows:
  extends: .base
  tags:
    - saas-windows-medium-amd64
  before_script:
    - curl.exe --proto '=https' --tlsv1.2 -sSf -o rustup-init.exe https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-msvc/rustup-init.exe
    - ./rustup-init.exe -y
    - $env:Path += ";$env:USERPROFILE\.cargo\bin"

run-tests-linux:
  extends: .base
  tags:
    - saas-linux-small-amd64

docs:
  stage: deploy
  cache:
    - key:
        files:
          - Cargo.toml
          - Cargo.lock
      paths:
        - ~/.cargo/bin/
        - ~/.cargo/registry/index/
        - ~/.cargo/registry/cache/
        - ~/.cargo/git/db/
        - docs/book/
        - target/
  image: rust:latest
  tags:
    - saas-linux-small-amd64
  script:
    - cargo build --verbose
    - cargo test --verbose
    - cargo run --example build-book
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  allow_failure: true
